/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Restaurar.java
 *
 * Created on 22/10/2015, 22:34:05
 */
package restaurar_backup;

import java.io.File;
import java.sql.Connection;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Guilherme
 */
public class Restaurar extends javax.swing.JFrame {
Connection con = null; //variável para usar em conexão de banco de dados.
Process proc;

    /** Creates new form Restaurar */
    public Restaurar() {
        initComponents();
        
        try {
            con = Conexao.conectar();//Conecta ao banco de dados 
            JFC_Backup.setVisible(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Erro!", 2);
        }
        setLocationRelativeTo(null); 
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JB_BT_Restaurar_Mysql = new javax.swing.JButton();
        JFC_Backup = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        JB_BT_Restaurar_Mysql.setText("Restaurar Backup");
        JB_BT_Restaurar_Mysql.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JB_BT_Restaurar_MysqlActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(JB_BT_Restaurar_Mysql)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(JFC_Backup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JFC_Backup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JB_BT_Restaurar_Mysql))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JB_BT_Restaurar_MysqlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JB_BT_Restaurar_MysqlActionPerformed
        // TODO add your handling code here:
        try {
   JFC_Backup.setVisible(true);  
               String bd = "test";
  int result = JFC_Backup.showOpenDialog(null); 
 
  if(result == JFileChooser.OPEN_DIALOG){
  
                File bkp;  
            bkp = JFC_Backup.getSelectedFile();  
           String arq = bkp.getPath();  
           System.out.println("bd "+ bd);
           System.out.println("arq "+ arq); 
           
String[] cmd = new String[3];
               cmd[0] = "cmd.exe" ;
                cmd[1] = "/C" ;
                 cmd[2] = "C:/wamp/bin/mysql/mysql5.6.17/bin -u root -pigc7gng -h localhost "+bd+" < "+arq ;
                 
         Runtime rt = Runtime.getRuntime();
            System.out.println("Execing " + cmd[0] + " " + cmd[1]);
            proc = rt.exec(cmd);
            
                        // any error message?
            StreamGobbler errorGobbler = new 
            StreamGobbler(proc.getErrorStream(), "ERROR");            
            
            // any output?
            StreamGobbler outputGobbler = new 
            StreamGobbler(proc.getInputStream(), "OUTPUT");
                
            // kick them off
            errorGobbler.run();
            outputGobbler.run();
                                    
            // any error???
            int exitVal = proc.waitFor();
      
       
                        if (exitVal == 0){  
                JOptionPane.showMessageDialog(null, "Backup Restaurado com sucesso !");  
            }  
            else{  
                JOptionPane.showMessageDialog(null, "Falha ao restaurar backup. \n Verifique as configurações ou entre em contato com o suporte !");  
            }
}
           
  
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Erro!", 2);            
        }        
    }//GEN-LAST:event_JB_BT_Restaurar_MysqlActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Restaurar().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JB_BT_Restaurar_Mysql;
    private javax.swing.JFileChooser JFC_Backup;
    // End of variables declaration//GEN-END:variables
}
